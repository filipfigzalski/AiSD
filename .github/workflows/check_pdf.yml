name: Check Typst PDF Consistency

on:
  pull_request:
    paths: # Only run if .typ or .pdf files are changed
      - "**.typ"
      - "**.pdf"

jobs:
  check_pdfs:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the repository
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Typst
        uses: typst-community/setup-typst@v3
        with:
          version: "latest"

      - name: Install diffpdf # Renamed step for clarity, installs 'diffpdf'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y diffpdf # Installs 'diffpdf' (no hyphen)
        shell: bash

      - name: Get changed Typst files
        id: changed_typst_files
        run: |
          MERGE_BASE=$(git merge-base origin/${{ github.base_ref }} HEAD)
          echo "Comparing changes between $MERGE_BASE (base) and HEAD (current PR commit)"
          CHANGED_FILES=$(git diff --name-only --diff-filter=AM $MERGE_BASE HEAD -- '*.typ')
          if [ -z "$CHANGED_FILES" ]; then
            echo "No .typ files were added or modified in this PR."
            echo "changed_files_list=''" >> $GITHUB_OUTPUT
          else
            echo "Added or modified .typ files to check:"
            echo "$CHANGED_FILES"
            echo "changed_files_list<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Compile Typst and Compare PDFs
        if: steps.changed_typst_files.outputs.changed_files_list != ''
        run: |
          FAILURE_DETECTED=0
          echo "${{ steps.changed_typst_files.outputs.changed_files_list }}" | while IFS= read -r typ_file; do
            if [ -z "$typ_file" ]; then
              continue
            fi
            echo ""
            echo "--------------------------------------------------"
            echo "Processing: $typ_file"
            echo "--------------------------------------------------"
            committed_pdf_file="${typ_file%.typ}.pdf"
            temp_dir=$(mktemp -d)
            generated_pdf_file="$temp_dir/generated_$(basename "${typ_file%.typ}").pdf"
            echo "Expected committed PDF: $committed_pdf_file"
            echo "Path for newly generated PDF: $generated_pdf_file"

            if [ ! -f "$committed_pdf_file" ]; then
              echo "::error file=$typ_file,title=Missing PDF::Committed PDF '$committed_pdf_file' not found for Typst file '$typ_file'. Please ensure the PDF is compiled and included in the PR."
              FAILURE_DETECTED=1
              rm -rf "$temp_dir"
              continue
            fi

            echo "Compiling '$typ_file' to '$generated_pdf_file'..."
            if typst compile "$typ_file" "$generated_pdf_file"; then
              echo "Compilation successful."
            else
              echo "::error file=$typ_file,title=Typst Compilation Failed::Failed to compile Typst file '$typ_file'."
              FAILURE_DETECTED=1
              rm -rf "$temp_dir"
              continue
            fi

            echo "Comparing '$committed_pdf_file' with '$generated_pdf_file'..."
            # Use 'diffpdf' (no hyphen) to match the installed package
            if diffpdf "$committed_pdf_file" "$generated_pdf_file"; then
              echo "✅ PDF '$committed_pdf_file' is up-to-date with '$typ_file'."
            else
              echo "::error file=$typ_file,title=PDF Out of Date::PDF '$committed_pdf_file' is not identical to the output of '$typ_file'. Please recompile '$typ_file' and commit the updated PDF."
              # If you uncomment this, also use 'diffpdf'
              # visual_diff_output_filename="diff_$(basename "${typ_file%.typ}").pdf"
              # diffpdf --output-diff="$temp_dir/$visual_diff_output_filename" "$committed_pdf_file" "$generated_pdf_file"
              # echo "Visual diff generated: $temp_dir/$visual_diff_output_filename (not uploaded by default)"
              FAILURE_DETECTED=1
            fi
            rm -rf "$temp_dir"
          done

          echo "--------------------------------------------------"
          if [ "$FAILURE_DETECTED" -eq 1 ]; then
            echo "❌ PDF consistency check failed for one or more files."
            exit 1
          else
            echo "✅ All checked Typst files have up-to-date PDFs."
          fi
        shell: bash
