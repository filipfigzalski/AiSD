name: Validate PDFs match Typst files (Advanced)

on:
  pull_request:
    paths:
      - "**.typ"
      - "**.pdf"

jobs:
  validate-pdfs:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Typst
        uses: typst-community/setup-typst@v4

      - name: Install PDF comparison tools
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils qpdf

      - name: Validate PDFs
        run: |
          #!/bin/bash
          set -e

          # Create temp directory
          temp_dir=$(mktemp -d)
          echo "Using temp directory: $temp_dir"

          validation_failed=false
          mismatched_files=()

          # Find all .typ files
          while IFS= read -r -d '' typ_file; do
            echo "Processing: $typ_file"
            
            # Determine expected PDF path
            pdf_file="${typ_file%.typ}.pdf"
            temp_pdf="$temp_dir/$(basename "$pdf_file")"
            
            # Compile Typst file
            if ! typst compile "$typ_file" "$temp_pdf"; then
              echo "❌ Failed to compile $typ_file"
              validation_failed=true
              continue
            fi
            
            # Check if corresponding PDF exists
            if [ ! -f "$pdf_file" ]; then
              echo "⚠️  Missing PDF: $pdf_file (expected for $typ_file)"
              echo "   Generated PDF available in artifacts."
              validation_failed=true
              mismatched_files+=("$typ_file (missing PDF)")
              continue
            fi
            
            # Compare PDFs using multiple methods
            echo "Comparing $pdf_file with compiled version..."
            
            # Method 1: Compare text content
            text_match=true
            if ! pdftotext "$pdf_file" "$temp_dir/existing.txt" 2>/dev/null; then
              echo "   Warning: Could not extract text from existing PDF"
              text_match=false
            fi
            
            if ! pdftotext "$temp_pdf" "$temp_dir/generated.txt" 2>/dev/null; then
              echo "   Warning: Could not extract text from generated PDF"
              text_match=false
            fi
            
            if [ "$text_match" = true ] && ! diff -q "$temp_dir/existing.txt" "$temp_dir/generated.txt" >/dev/null 2>&1; then
              echo "❌ Text content differs for $pdf_file"
              echo "   Run: typst compile $typ_file $pdf_file"
              validation_failed=true
              mismatched_files+=("$typ_file")
              continue
            fi
            
            # Method 2: Compare file sizes (rough check)
            existing_size=$(stat -c%s "$pdf_file" 2>/dev/null)
            generated_size=$(stat -c%s "$temp_pdf" 2>/dev/null)
            
            size_diff=$((existing_size - generated_size))
            size_diff=${size_diff#-}  # absolute value
            
            # Allow 5% size difference (PDFs can have slight variations)
            threshold=$((existing_size / 20))
            
            if [ $size_diff -gt $threshold ] && [ $threshold -gt 100 ]; then
              echo "⚠️  Significant size difference for $pdf_file"
              echo "   Existing: $existing_size bytes, Generated: $generated_size bytes"
            fi
            
            echo "✅ $pdf_file appears to match $typ_file"
            
          done < <(find . -name "*.typ" -type f -print0)

          # Copy generated PDFs for artifact upload
          mkdir -p generated_pdfs
          cp "$temp_dir"/*.pdf generated_pdfs/ 2>/dev/null || echo "No PDFs to copy"

          # Save mismatched files info for PR comment
          if [ ${#mismatched_files[@]} -gt 0 ]; then
            echo "MISMATCHED_FILES<<EOF" >> $GITHUB_ENV
            printf '%s\n' "${mismatched_files[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

          # Clean up
          rm -rf "$temp_dir"

          if [ "$validation_failed" = true ]; then
            echo ""
            echo "❌ PDF validation failed!"
            echo "Some PDFs do not match their corresponding Typst files."
            echo "Please run 'typst compile' on the affected files and commit the updated PDFs."
            exit 1
          else
            echo ""
            echo "✅ All PDFs are up to date with their Typst sources!"
          fi

      - name: Upload generated PDFs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs-${{ github.event.number }}
          path: generated_pdfs/
          retention-days: 7

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const mismatchedFiles = process.env.MISMATCHED_FILES?.split('\n').filter(f => f.trim()) || [];

            let fileList = '';
            if (mismatchedFiles.length > 0) {
              fileList = '\n\n**Affected files:**\n' + 
                         mismatchedFiles.map(f => `- \`${f}\``).join('\n');
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ **PDF Validation Failed**
              
              Some PDF files do not match their corresponding Typst source files.${fileList}
              
              **To fix this:**
              1. Run \`typst compile <file>.typ\` for each affected file
              2. Commit the updated PDFs
              
              Generated PDFs are available in the [workflow artifacts](${context.payload.pull_request.html_url}/checks) for comparison.`
            });
